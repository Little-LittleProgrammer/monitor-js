import{get_page_url as o,get_error_uid as e,parse_stack_frames as t,isString as n,get_big_version as r}from"@qmonitor/utils";const s={name:"vue-error",type:"error",monitor(n){const r=this.options.vue;if(r&&r.Vue&&r.Vue.config){const{Vue:s}=r,a=s.config.errorHandler;s.config.errorHandler=(r,s,i)=>{const m={type:"error",subType:"vue-error",pageURL:o(),extraData:{type:r.name,errorUid:e(`vue-error-${r.message}-${i}`),msg:r.stack||r.message,stackTrace:{frames:t(r)},meta:{info:i}}};return n("vue-error",{_report:m,vm:s}),null==a?void 0:a(r,s,i)}}},transform({_report:o,vm:e}){const t=this.options.vue;if(t&&t.Vue&&t.Vue.config){const{Vue:s}=t;if(n(null==s?void 0:s.version))switch(r(s.version)){case 2:return o.extraData.meta=Object.assign(Object.assign({},o.extraData.meta),function(o){let e="";if(o.$root===o)e="root";else{const t=o._isVue?o.$options&&o.$options.name||o.$options&&o.$options._componentTag:o.name;e=(t?"component <"+t+">":"anonymous component")+(o._isVue&&o.$options&&o.$options.__file?" at "+(o.$options&&o.$options.__file):"")}return{componentName:e}}(e)),o;case 3:return o.extraData.meta=Object.assign(Object.assign({},o.extraData.meta),function(o){let e="";if(o.$root===o)e="root";else{const t=o.$options&&o.$options.name;e=t?"component <"+t+">":"anonymous component"}return{componentName:e}}(e)),o;default:return o}}},consumer(o){this.report.send(o,!0)}};export{s as vuePlugin};
